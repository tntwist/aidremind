version: "3.4"

services:
  artemis:
    container_name: artemis
    image: vromero/activemq-artemis:2.8.0-alpine
    ports:
      - "8161:8161"
      - "61616:61616"
      - "5672:5672"
    environment:
      ARTEMIS_USERNAME: quarkus
      ARTEMIS_PASSWORD: quarkus
    networks:
      - amqp-network

  notifier:
    container_name: notifier
    build:
      context: .
      dockerfile: backend/Notifier/Dockerfile
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - artemis
    command: "./wait-for-postgres.sh"
    networks:
      - api-network
      - amqp-network
  scheduler:
    container_name: scheduler
    build:
      context: .
      dockerfile: backend/Scheduler/Dockerfile
    restart: always
    ports:
      - "8084:8084"
    depends_on:
      - schedulerpostgres
      - artemis
    command:
      [
        "./wait-for-postgres.sh",
        "schedulerpostgres:5432",
        "--",
        "python",
        "app.py",
      ]
    networks:
      - scheduler-network
      - amqp-network
  schedulerpostgres:
    image: postgres:alpine
    container_name: schedulerpostgres
    volumes:
      - ./init_quartz.sql:/docker-entrypoint-initdb.d/init.sql
      - quartz-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=quartz
      - POSTGRES_PASSWORD=quartz
      - POSTGRES_DB=quartz
    ports:
      - 5432:5432
    networks:
      - scheduler-network

  clerkapi:
    container_name: clerk-api
    image: ${DOCKER_REGISTRY-}clerkapi
    build:
      context: .
      dockerfile: backend/ClerkApi/Dockerfile
    ports:
      - "8081:80"
    depends_on:
      - apipostgres
      - managerapi
    command:
      ["./wait-for-postgres.sh", "apipostgres:5432", "--", "python", "app.py"]
    networks:
      - api-network

  managerapi:
    container_name: manager-api
    image: ${DOCKER_REGISTRY-}managerapi
    build:
      context: .
      dockerfile: backend/ManagerApi/Dockerfile
    ports:
      - "8082:80"
    depends_on:
      - apipostgres
    command:
      ["./wait-for-postgres.sh", "apipostgres:5432", "--", "python", "app.py"]
    networks:
      - api-network
      - amqp-network

  apipostgres:
    image: postgres:alpine
    container_name: api-db
    volumes:
      - api-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=api
    ports:
      - 5433:5432
    networks:
      - api-network

networks:
  scheduler-network:
  amqp-network:
  api-network:
    driver: bridge

volumes:
  quartz-db:
  api-db:
